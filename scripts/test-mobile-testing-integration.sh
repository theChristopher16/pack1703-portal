#!/bin/bash

# Mobile Testing System Integration Test
# This script tests the mobile testing system integration

echo "üß™ Testing Mobile Testing System Integration..."

# Check if the mobile testing files exist
echo "üìÅ Checking mobile testing files..."

if [ -f "src/pages/MobileTestingPage.tsx" ]; then
    echo "‚úÖ MobileTestingPage.tsx exists"
else
    echo "‚ùå MobileTestingPage.tsx missing"
    exit 1
fi

if [ -f "src/services/mobileTestingService.ts" ]; then
    echo "‚úÖ mobileTestingService.ts exists"
else
    echo "‚ùå mobileTestingService.ts missing"
    exit 1
fi

if [ -f "src/components/Testing/MobileTestComponent.tsx" ]; then
    echo "‚úÖ MobileTestComponent.tsx exists"
else
    echo "‚ùå MobileTestComponent.tsx missing"
    exit 1
fi

if [ -f "src/hooks/useMobileTesting.ts" ]; then
    echo "‚úÖ useMobileTesting.ts exists"
else
    echo "‚ùå useMobileTesting.ts missing"
    exit 1
fi

# Check if routes are properly configured
echo "üîó Checking route configuration..."

if grep -q "MobileTestingPage" src/App.tsx; then
    echo "‚úÖ MobileTestingPage imported in App.tsx"
else
    echo "‚ùå MobileTestingPage not imported in App.tsx"
    exit 1
fi

if grep -q "/mobile-testing" src/App.tsx; then
    echo "‚úÖ /mobile-testing route configured"
else
    echo "‚ùå /mobile-testing route not configured"
    exit 1
fi

if grep -q "/admin/mobile-testing" src/App.tsx; then
    echo "‚úÖ /admin/mobile-testing route configured"
else
    echo "‚ùå /admin/mobile-testing route not configured"
    exit 1
fi

# Check if navigation is configured
echo "üß≠ Checking navigation configuration..."

if grep -q "Mobile Testing" src/components/Admin/AdminNav.tsx; then
    echo "‚úÖ Mobile Testing in AdminNav"
else
    echo "‚ùå Mobile Testing not in AdminNav"
    exit 1
fi

if grep -q "Mobile Testing" src/components/Layout/Layout.tsx; then
    echo "‚úÖ Mobile Testing in Layout navigation"
else
    echo "‚ùå Mobile Testing not in Layout navigation"
    exit 1
fi

# Check for linting errors
echo "üîç Checking for linting errors..."

if command -v npm &> /dev/null; then
    echo "Running ESLint on mobile testing files..."
    npx eslint src/pages/MobileTestingPage.tsx src/services/mobileTestingService.ts src/components/Testing/MobileTestComponent.tsx src/hooks/useMobileTesting.ts --quiet
    if [ $? -eq 0 ]; then
        echo "‚úÖ No linting errors in mobile testing files"
    else
        echo "‚ùå Linting errors found in mobile testing files"
        exit 1
    fi
else
    echo "‚ö†Ô∏è  npm not available, skipping linting check"
fi

# Test TypeScript compilation
echo "üîß Testing TypeScript compilation..."

if command -v npx &> /dev/null; then
    echo "Checking TypeScript compilation..."
    npx tsc --noEmit --skipLibCheck src/pages/MobileTestingPage.tsx src/services/mobileTestingService.ts src/components/Testing/MobileTestComponent.tsx src/hooks/useMobileTesting.ts
    if [ $? -eq 0 ]; then
        echo "‚úÖ TypeScript compilation successful"
    else
        echo "‚ùå TypeScript compilation errors"
        exit 1
    fi
else
    echo "‚ö†Ô∏è  npx not available, skipping TypeScript check"
fi

echo ""
echo "üéâ Mobile Testing System Integration Test Complete!"
echo ""
echo "üì± Mobile Testing System Features:"
echo "   ‚Ä¢ Device Testing: iPhone 12, iPhone 12 Pro Max, iPad, iPad Pro, Desktop"
echo "   ‚Ä¢ Test Suites: Responsive, Touch, Performance, Accessibility, PWA"
echo "   ‚Ä¢ Real-time Results: Live test results with status indicators"
echo "   ‚Ä¢ Session Tracking: Complete test history in Firestore"
echo "   ‚Ä¢ Admin Integration: Accessible via /admin/mobile-testing"
echo "   ‚Ä¢ Public Access: Available at /mobile-testing for testing"
echo ""
echo "üöÄ Ready to use! Navigate to /mobile-testing or /admin/mobile-testing to start testing."
